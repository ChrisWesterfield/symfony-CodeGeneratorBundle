<?php
namespace MjrOne\CodeGeneratorBundle\DependencyInjection;
use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;
use Symfony\Component\EventDispatcher\EventDispatcherInterface;

/**
 * Configuration
 * @copyright Christopher Westerfield <chris@mjr.one>
 * @license LGPL V3
 * @link http://www.mjr.one
 * @package CodeGeneratorBundle\DependencyInjection
 */
class Configuration implements ConfigurationInterface
{
    /**
     * get Config Tree
     */
    public function getConfigTreeBuilder()
    {
        $treeBuilder = new TreeBuilder();
        $rootNode = $treeBuilder->root('mjr_one_code_generator');
        $rootNode
            ->children()
                ->scalarNode('entity_interface_class')
                    ->defaultValue('\MjrOne\CodeGeneratorInterfaces\EntityInterface')
                ->end()
                ->arrayNode('router')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('bundles')
                            ->defaultValue('config/routing.yml')
                        ->end()
                        ->scalarNode('development')
                            ->defaultValue('config/routing_dev.yml')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('user')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('enabled')
                            ->defaultFalse()
                        ->end()
                        ->scalarNode('factory_class')
                            ->defaultValue('\MJR\UserBundle\Services\CurrentUserFactory')
                        ->end()
                        ->scalarNode('factory_class_short')
                            ->defaultNull()
                        ->end()
                        ->scalarNode('factory_service')
                            ->defaultValue('@mjr.user_bundle.services.current_user_factory')
                        ->end()
                        ->scalarNode('repository_service')
                            ->defaultValue('@mjr.user_bundle.repository.user_repository')
                        ->end()
                        ->scalarNode('entity')
                            ->defaultValue('MJR\UserBundle\Entity\User')
                        ->end()
                        ->scalarNode('entity_short')
                            ->defaultNull()
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('cache')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('class')
                            ->defaultValue('\MJR\MemcacheBundle\Service\Cache')
                        ->end()
                        ->scalarNode('class_short')
                            ->defaultNull()
                        ->end()
                        ->scalarNode('service')
                            ->defaultValue('@mjr.memcache.service.cache')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('event')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('class')
                            ->defaultValue('\Symfony\Component\EventDispatcher\EventDispatcherInterface')
                        ->end()
                        ->scalarNode('class_short')
                            ->defaultValue('EventDispatcherInterface')
                        ->end()
                        ->scalarNode('service')
                            ->defaultValue('@event_dispatcher')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('core')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('responseClass')
                            ->defaultValue('Symfony\Component\HttpFoundation\Response')
                        ->end()
                        ->scalarNode('requestClass')
                            ->defaultValue('Symfony\Component\HttpFoundation\Request')
                        ->end()
                        ->scalarNode('redirectClass')
                            ->defaultValue('Symfony\Component\HttpFoundation\RedirectResponse')
                        ->end()
                        ->scalarNode('AppKernel')
                            ->defaultValue('Symfony\Component\HttpKernel\KernelInterface')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('file_properties')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('hide_generated_by')
                            ->defaultFalse()
                        ->end()
                        ->scalarNode('copyright')
                            ->defaultValue('Christopher Westerfield')
                        ->end()
                        ->scalarNode('license')
                            ->defaultValue('MJR.ONE L-GPL V3')
                        ->end()
                        ->booleanNode('use_strict_types')
                            ->defaultValue(true)
                        ->end()
                        ->booleanNode('use_namespace')
                            ->defaultValue(true)
                        ->end()
                        ->scalarNode('link')
                            ->defaultValue('https://www.mjr.one')
                        ->end()
                        ->arrayNode('authors')
                            ->defaultValue([['author'=>'Christopher Westerfield','email'=>'chris@mjr.one']])
                            ->prototype('array')
                                ->children()
                                    ->scalarNode('name')
                                        ->defaultValue('Christopher Westerfield')
                                    ->end()
                                    ->scalarNode('email')
                                        ->defaultValue('chris@mjr.one')
                                    ->end()
                                ->end()
                            ->end()
                        ->end()
                    ->end()
                ->end();

        return $treeBuilder;
    }
}
