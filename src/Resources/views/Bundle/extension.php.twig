{% extends "MjrOneCodeGeneratorBundle::base.php.twig" %}
{% set class=bundle_basename ~ "Extension"  %}
{% block generated %}{% endblock %}
{% block namespace %}
namespace {{ namespace }}\DependencyInjection;
{% endblock %}

{% block useSection %}
use Symfony\Component\DependencyInjection\ContainerBuilder;
use Symfony\Component\Config\FileLocator;
use Symfony\Component\HttpKernel\DependencyInjection\Extension;
use Symfony\Component\DependencyInjection\Loader;
use MjrOne\CodeGeneratorBundle\Annotation as CG;
{% endblock %}

{% block comment %}
 * This is the class that loads and manages your bundle configuration.
 * @link http://symfony.com/doc/current/cookbook/bundles/extension.html
{% endblock %}
{% block body %}
{% block class_definition %}
class {{ class }} extends Extension
{% endblock class_definition %}
{
{% block class_body %}
    /**
     * {@inheritdoc}
     */
    public function load(array $configs, ContainerBuilder $container)
    {
        $configuration = new Configuration();
        $config = $this->processConfiguration($configuration, $configs);

        {% if format == 'yml' or format == 'annotation' -%}
        $loader = new Loader\YamlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.yml');
        {%- elseif format == 'xml' -%}
        $loader = new Loader\XmlFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.xml');
        {%- elseif format == 'php' -%}
        $loader = new Loader\PhpFileLoader($container, new FileLocator(__DIR__.'/../Resources/config'));
        $loader->load('services.php');
        {%- endif %}

    }
{% endblock class_body %}
}
{% endblock %}
